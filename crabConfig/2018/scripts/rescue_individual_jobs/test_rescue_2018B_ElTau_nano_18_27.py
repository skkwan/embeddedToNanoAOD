# Auto generated configuration file
# modified with instructions from https://twiki.cern.ch/twiki/bin/viewauth/CMS/TauEmbeddingSamplesUL#NanoAOD_Conversion
# using: 
# Revision: 1.19 
# Source: /local/reps/CMSSW/CMSSW/Configuration/Applications/python/ConfigBuilder.py,v 
# with command line options: -s NANO --data --eventcontent NANOAOD --datatier NANOAOD --no_exec --conditions 106X_dataRun2_v37 --era Run2_2018 --filein file:test_18.root --fileout file:test_nano_18.root --python_filename=embedding_nanoAOD_18.py
import FWCore.ParameterSet.Config as cms

from Configuration.Eras.Era_Run2_2018_cff import Run2_2018

process = cms.Process('NANO',Run2_2018)

# import of standard configurations
process.load('Configuration.StandardSequences.Services_cff')
process.load('SimGeneral.HepPDTESSource.pythiapdt_cfi')
process.load('FWCore.MessageService.MessageLogger_cfi')
process.load('Configuration.EventContent.EventContent_cff')
process.load('Configuration.StandardSequences.GeometryRecoDB_cff')
process.load('Configuration.StandardSequences.MagneticField_AutoFromDBCurrent_cff')
process.load('PhysicsTools.NanoAOD.nano_cff')
process.load('Configuration.StandardSequences.EndOfProcess_cff')
process.load('Configuration.StandardSequences.FrontierConditions_GlobalTag_cff')

process.maxEvents = cms.untracked.PSet(
    input = cms.untracked.int32(-1)
)

# Input source
process.source = cms.Source("PoolSource",
                        fileNames = cms.untracked.vstring(
                            '/store/group/rucio/pog_tau_group/ul_embedding/large_miniAOD_v2/ElTauFinalState/EmbeddingRun2018B/MINIAOD/inputDoubleMu_106X_ULegacy_miniAOD-v1/0000/e722ff45-f991-4acf-98d3-a3b9178c8467.root', 
#    '/store/group/rucio/pog_tau_group/ul_embedding/large_miniAOD_v2/ElTauFinalState/EmbeddingRun2018B/MINIAOD/inputDoubleMu_106X_ULegacy_miniAOD-v1/0000/384245ee-7614-404b-9970-99f5cae697eb.root', 
    '/store/group/rucio/pog_tau_group/ul_embedding/large_miniAOD_v2/ElTauFinalState/EmbeddingRun2018B/MINIAOD/inputDoubleMu_106X_ULegacy_miniAOD-v1/0000/768756e7-ac0e-484b-8d9d-c04758c9291b.root', 
    '/store/group/rucio/pog_tau_group/ul_embedding/large_miniAOD_v2/ElTauFinalState/EmbeddingRun2018B/MINIAOD/inputDoubleMu_106X_ULegacy_miniAOD-v1/0000/8ed36c02-1979-4d3a-9bbb-65b70b4a1bfa.root', 
    '/store/group/rucio/pog_tau_group/ul_embedding/large_miniAOD_v2/ElTauFinalState/EmbeddingRun2018B/MINIAOD/inputDoubleMu_106X_ULegacy_miniAOD-v1/0000/55867ce5-5057-48b3-addd-131b1a31e7c0.root', 
    '/store/group/rucio/pog_tau_group/ul_embedding/large_miniAOD_v2/ElTauFinalState/EmbeddingRun2018B/MINIAOD/inputDoubleMu_106X_ULegacy_miniAOD-v1/0000/44df21b7-d6c0-43de-8af0-7bc31dbbe667.root', 
    '/store/group/rucio/pog_tau_group/ul_embedding/large_miniAOD_v2/ElTauFinalState/EmbeddingRun2018B/MINIAOD/inputDoubleMu_106X_ULegacy_miniAOD-v1/0000/768756e7-ac0e-484b-8d9d-c04758c9291b.root', 
    '/store/group/rucio/pog_tau_group/ul_embedding/large_miniAOD_v2/ElTauFinalState/EmbeddingRun2018B/MINIAOD/inputDoubleMu_106X_ULegacy_miniAOD-v1/0000/8ed36c02-1979-4d3a-9bbb-65b70b4a1bfa.root', 
    '/store/group/rucio/pog_tau_group/ul_embedding/large_miniAOD_v2/ElTauFinalState/EmbeddingRun2018B/MINIAOD/inputDoubleMu_106X_ULegacy_miniAOD-v1/0000/44df21b7-d6c0-43de-8af0-7bc31dbbe667.root', 
    '/store/group/rucio/pog_tau_group/ul_embedding/large_miniAOD_v2/ElTauFinalState/EmbeddingRun2018B/MINIAOD/inputDoubleMu_106X_ULegacy_miniAOD-v1/0000/154d7d42-62a9-4b06-9e94-2f4c99e2286b.root', 
    '/store/group/rucio/pog_tau_group/ul_embedding/large_miniAOD_v2/ElTauFinalState/EmbeddingRun2018B/MINIAOD/inputDoubleMu_106X_ULegacy_miniAOD-v1/0000/b10923e4-4084-4a8e-8226-aff3c78ff188.root'

    ),
    secondaryFileNames = cms.untracked.vstring()
)

process.options = cms.untracked.PSet(

)

process.source.lumisToProcess = cms.untracked.VLuminosityBlockRange( (
     "317683:413-317683:414", "317683:419-317683:420", "317696:127-317696:127", "317696:148-317696:148", "317696:170-317696:170", 
    "317696:202-317696:202", "317696:282-317696:282", "317696:315-317696:315", "317696:319-317696:319", "317696:324-317696:324", 
    "317696:341-317696:341", "317696:348-317696:349", "317696:360-317696:360", "317696:433-317696:433", "317696:448-317696:448", 
    "317696:453-317696:453", "317696:458-317696:458", "317696:473-317696:473", "317696:476-317696:476", "317696:490-317696:490", 
    "317696:492-317696:493", "317696:534-317696:534", "317696:537-317696:537", "317696:563-317696:563", "317696:569-317696:569", 
    "317696:648-317696:648", "317696:668-317696:668", "317696:670-317696:670", "317696:133-317696:133", "317696:141-317696:141", 
    "317696:143-317696:143", "317696:147-317696:147", "317696:188-317696:188", "317696:224-317696:224", "317696:256-317696:256", 
    "317696:263-317696:263", "317696:288-317696:289", "317696:318-317696:318", "317696:322-317696:322", "317696:357-317696:358", 
    "317696:367-317696:367", "317696:434-317696:434", "317696:447-317696:447", "317696:451-317696:451", "317696:457-317696:457", 
    "317696:484-317696:484", "317696:527-317696:527", "317696:545-317696:547", "317696:617-317696:617", "317696:669-317696:669", 
    "317696:142-317696:142", "317696:172-317696:172", "317696:303-317696:303", "317696:459-317696:459", "317696:477-317696:477", 
    "317696:485-317696:485", "317696:524-317696:524", "317696:540-317696:540", "317696:551-317696:551", "317696:554-317696:554", 
    "317696:568-317696:568", "317696:635-317696:635", "317696:223-317696:223", "317696:229-317696:229", "317696:283-317696:283", 
    "317696:294-317696:294", "317696:310-317696:310", "317696:327-317696:327", "317696:333-317696:333", "317696:336-317696:336", 
    "317696:407-317696:407", "317696:474-317696:474", "317696:491-317696:491", "317696:494-317696:494", "317696:514-317696:514", 
    "317696:523-317696:523", "317696:530-317696:530", "317696:532-317696:532", "317696:538-317696:539", "317696:548-317696:548", 
    "317696:555-317696:555", "317696:565-317696:565", "317696:570-317696:570", "317696:625-317696:625", "317696:636-317696:637", 
    "317696:666-317696:666", "317696:686-317696:686", "317696:169-317696:169", "317696:201-317696:201", "317696:257-317696:257", 
    "317696:295-317696:295", "317696:320-317696:320", "317696:323-317696:323", "317696:325-317696:325", "317696:332-317696:332", 
    "317696:340-317696:340", "317696:342-317696:342", "317696:377-317696:377", "317696:384-317696:385", "317696:440-317696:440", 
    "317696:445-317696:445", "317696:469-317696:469", "317696:472-317696:472", "317696:475-317696:475", "317696:486-317696:486", 
    "317696:533-317696:533", "317696:535-317696:535", "317696:549-317696:549", "317696:562-317696:562", "317696:618-317696:619", 
    "317696:685-317696:685", "317696:688-317696:688", "317696:690-317696:692", "317696:134-317696:134", "317696:144-317696:144", 
    "317696:262-317696:262", "317696:302-317696:302", "317696:312-317696:312", "317696:334-317696:334", "317696:378-317696:378", 
    "317696:386-317696:386", "317696:424-317696:424", "317696:437-317696:437", "317696:446-317696:446", "317696:471-317696:471", 
    "317696:515-317696:516", "317696:525-317696:525", "317696:528-317696:528", "317696:566-317696:567", "317696:571-317696:571", 
    "317696:649-317696:649", "317696:667-317696:667", "317696:676-317696:676", "317696:683-317696:683", "317696:128-317696:128", 
    "317696:171-317696:171", "317696:212-317696:212", "317696:230-317696:230", "317696:326-317696:326", "317696:335-317696:335", 
    "317696:391-317696:391", "317696:406-317696:406", "317696:438-317696:439", "317696:495-317696:495", "317696:529-317696:529", 
    "317696:544-317696:544", "317696:616-317696:616", "317696:623-317696:623", "317696:687-317696:687", "317696:689-317696:689", 
    "317696:693-317696:693", "317696:125-317696:126", "317696:187-317696:187", "317696:211-317696:211", "317696:311-317696:311", 
    "317696:313-317696:314", "317696:321-317696:321", "317696:343-317696:343", "317696:359-317696:359", "317696:368-317696:368", 
    "317696:383-317696:383", "317696:392-317696:393", "317696:425-317696:425", "317696:452-317696:452", "317696:470-317696:470", 
    "317696:526-317696:526", "317696:531-317696:531", "317696:536-317696:536", "317696:550-317696:550", "317696:552-317696:553", 
    "317696:564-317696:564", "317696:624-317696:624", "317696:647-317696:647", "317696:674-317696:675", "317696:684-317696:684", 
    "317696:199-317696:199", "317696:203-317696:203", "317696:232-317696:232", "317696:242-317696:242", "317696:305-317696:305", 
    "317696:394-317696:394", "317696:404-317696:405", "317696:462-317696:462", "317696:481-317696:481", "317696:508-317696:508", 
    "317696:518-317696:518", "317696:588-317696:588", "317696:590-317696:590", "317696:599-317696:599", "317696:603-317696:603", 
    "317696:643-317696:643", "317696:646-317696:646", "317696:681-317696:681", "317696:137-317696:137", "317696:152-317696:152", 
    "317696:195-317696:195", "317696:209-317696:209", "317696:214-317696:214", "317696:255-317696:255", "317696:330-317696:330", 
    "317696:353-317696:353", "317696:370-317696:371", "317696:395-317696:395", "317696:420-317696:420", "317696:488-317696:488", 
    "317696:503-317696:503", "317696:517-317696:517", "317696:541-317696:542", "317696:557-317696:558", "317696:594-317696:594", 
    "317696:602-317696:602", "317696:641-317696:642", "317696:671-317696:671", "317696:138-317696:138", "317696:145-317696:146", 
    "317696:151-317696:151", "317696:184-317696:185", "317696:204-317696:204", "317696:226-317696:226", "317696:237-317696:237", 
    "317696:240-317696:240", "317696:291-317696:291", "317696:304-317696:304", "317696:344-317696:344", "317696:390-317696:390", 
    "317696:421-317696:421", "317696:468-317696:468", "317696:480-317696:480", "317696:483-317696:483", "317696:489-317696:489", 
    "317696:510-317696:510", "317696:572-317696:572", "317696:584-317696:584", "317696:586-317696:586", "317696:592-317696:592", 
    "317696:600-317696:600", "317696:639-317696:639", "317696:673-317696:673", "317696:680-317696:680", "317696:154-317696:154", 
    "317696:174-317696:174", "317696:183-317696:183", "317696:186-317696:186", "317696:198-317696:198", "317696:210-317696:210", 
    "317696:225-317696:225", "317696:252-317696:254", "317696:271-317696:271", "317696:296-317696:296", "317696:317-317696:317", 
    "317696:337-317696:337", "317696:354-317696:355", "317696:363-317696:363", "317696:417-317696:417", "317696:460-317696:460", 
    "317696:506-317696:506", "317696:543-317696:543", "317696:581-317696:581", "317696:585-317696:585", "317696:638-317696:638", 
    "317696:640-317696:640", "317696:130-317696:130", "317696:162-317696:162", "317696:208-317696:208", "317696:297-317696:297", 
    "317696:329-317696:329", "317696:356-317696:356", "317696:369-317696:369", "317696:413-317696:413", "317696:416-317696:416", 
    "317696:418-317696:418", "317696:422-317696:422", "317696:456-317696:456", "317696:478-317696:478", "317696:502-317696:502", 
    "317696:504-317696:504", "317696:556-317696:556", "317696:580-317696:580", "317696:589-317696:589", "317696:593-317696:593", 
    "317696:598-317696:598", "317696:645-317696:645", "317696:136-317696:136", "317696:153-317696:153", "317696:159-317696:159", 
    "317696:161-317696:161", "317696:175-317696:175", "317696:197-317696:197", "317696:200-317696:200", "317696:241-317696:241", 
    "317696:251-317696:251", "317696:270-317696:270", "317696:338-317696:339", "317696:345-317696:345", "317696:361-317696:361", 
    "317696:389-317696:389", "317696:400-317696:401", "317696:466-317696:467", "317696:505-317696:505", "317696:507-317696:507", 
    "317696:519-317696:519", "317696:573-317696:573", "317696:582-317696:582", "317696:587-317696:587", "317696:591-317696:591", 
    "317696:672-317696:672", "317696:135-317696:135", "317696:176-317696:176", "317696:191-317696:191", "317696:196-317696:196", 
    "317696:207-317696:207", "317696:213-317696:213", "317696:219-317696:219", "317696:231-317696:231", "317696:250-317696:250", 
    "317696:362-317696:362", "317696:364-317696:364", "317696:388-317696:388", "317696:419-317696:419", "317696:423-317696:423", 
    "317696:454-317696:455", "317696:479-317696:479", "317696:487-317696:487", "317696:509-317696:509", "317696:644-317696:644", 
    "317696:682-317696:682", "317696:129-317696:129", "317696:160-317696:160", "317696:173-317696:173", "317696:192-317696:192", 
    "317696:220-317696:220", "317696:238-317696:239", "317696:290-317696:290", "317696:316-317696:316", "317696:328-317696:328", 
    "317696:331-317696:331", "317696:372-317696:372", "317696:387-317696:387", "317696:412-317696:412", "317696:461-317696:461", 
    "317696:482-317696:482", "317696:583-317696:583", "317696:601-317696:601", "317696:164-317696:167", "317696:193-317696:193", 
    "317696:217-317696:217", "317696:266-317696:266", "317696:276-317696:276", "317696:609-317696:609", "317696:190-317696:190", 
    "317696:268-317696:268", "317696:131-317696:131", "317696:221-317696:221", "317696:269-317696:269", "317696:163-317696:163", 
    "317696:168-317696:168", "317696:277-317696:277", "317696:300-317696:300", "317696:560-317696:561", "317696:574-317696:574", 
    "317696:132-317696:132", "317696:218-317696:218", "317696:559-317696:559", "317696:577-317696:578", "317696:610-317696:612", 
    "317696:189-317696:189", "317696:267-317696:267", "317696:576-317696:576", "317696:608-317696:608", "317696:206-317696:206", 
    "317696:233-317696:234", "317696:261-317696:261", "317696:301-317696:301", "317696:575-317696:575", "317696:579-317696:579", 
    "317696:194-317696:194", "317696:205-317696:205", "317696:222-317696:222", "317696:260-317696:260", "317696:607-317696:607", 
    "318070:4-318070:4", "318070:2-318070:3", "318070:1-318070:1", "318563:22-318563:22", "318563:33-318563:34", 
    "318563:36-318563:36", "318563:46-318563:46", "318563:12-318563:12", "318563:15-318563:15", "318563:35-318563:35", 
    "318563:48-318563:48", "318563:26-318563:27", "318563:40-318563:40", "318563:49-318563:50", "318563:14-318563:14", 
    "318563:18-318563:19", "318563:29-318563:29", "318563:39-318563:39", "318563:52-318563:52", "318563:25-318563:25", 
    "318563:31-318563:31", "318563:37-318563:38", "318563:41-318563:41", "318563:43-318563:44", "318563:47-318563:47", 
    "318563:53-318563:54", "318563:56-318563:56", "318563:58-318563:58", "318563:13-318563:13", "318563:16-318563:16", 
    "318563:24-318563:24", "318563:21-318563:21", "318563:32-318563:32", "318563:42-318563:42", "318563:45-318563:45", 
    "318563:51-318563:51", "318563:55-318563:55", "318563:59-318563:60", "318563:17-318563:17", "318563:20-318563:20", 
    "318563:23-318563:23", "318563:28-318563:28", "318563:30-318563:30", "318563:57-318563:57", "318712:144-318712:144", 
    "318712:134-318712:134", "318712:143-318712:143", "318733:9-318733:9", "318733:11-318733:11", "318733:33-318733:33", 
    "318733:23-318733:23", "318733:29-318733:29", "318733:31-318733:31", "318733:7-318733:7", "318733:16-318733:16", 
    "318733:21-318733:21", "318733:10-318733:10", "318733:12-318733:12", "318733:2-318733:3", "318733:5-318733:6", 
    "318733:28-318733:28", "318733:18-318733:18", "318733:1-318733:1", "318733:13-318733:13", "318733:4-318733:4", 
    "318733:8-318733:8", "318733:14-318733:15", "318733:17-318733:17", "318733:19-318733:20", "318733:22-318733:22", 
    "318733:24-318733:27", "318733:30-318733:30", "318733:32-318733:32", "318874:11-318874:12", "318874:25-318874:25", 
    "318874:28-318874:28", "318874:30-318874:31", "318874:33-318874:34", "318874:36-318874:37", "318874:39-318874:39", 
    "318874:58-318874:58", "318874:64-318874:64", "318874:82-318874:82", "318874:102-318874:102", "318874:105-318874:105", 
    "318874:109-318874:109", "318874:128-318874:128", "318874:131-318874:132", "318874:138-318874:138", "318874:145-318874:145", 
    "318874:183-318874:183", "318874:255-318874:255", "318874:38-318874:38", "318874:52-318874:52", "318874:59-318874:59", 
    "318874:72-318874:72", "318874:78-318874:78", "318874:84-318874:84", "318874:93-318874:94", "318874:106-318874:107", 
    "318874:119-318874:119", "318874:182-318874:182", "318874:251-318874:251", "318874:22-318874:22", "318874:32-318874:32", 
    "318874:40-318874:40", "318874:48-318874:48", "318874:71-318874:71", "318874:79-318874:79", "318874:81-318874:81", 
    "318874:83-318874:83", "318874:92-318874:92", "318874:98-318874:98", "318874:100-318874:100", "318874:110-318874:110", 
    "318874:114-318874:114", "318874:121-318874:121", "318874:144-318874:144", "318874:164-318874:164", "318874:166-318874:166", 
    "318874:184-318874:185", "318874:228-318874:228", "318874:24-318874:24", "318874:26-318874:26", "318874:41-318874:41", 
    "318874:62-318874:62", "318874:66-318874:66", "318874:74-318874:74", "318874:96-318874:97", "318874:99-318874:99", 
    "318874:125-318874:125", "318874:10-318874:10", "318874:44-318874:44", "318874:65-318874:65", "318874:85-318874:85", 
    "318874:101-318874:101", "318874:108-318874:108", "318874:112-318874:113", "318874:115-318874:115", "318874:230-318874:230", 
    "318874:45-318874:46", "318874:53-318874:53", "318874:55-318874:55", "318874:57-318874:57", "318874:77-318874:77", 
    "318874:86-318874:86", "318874:88-318874:88", "318874:103-318874:103", "318874:111-318874:111", "318874:120-318874:120", 
    "318874:141-318874:141", "318874:143-318874:143", "318874:186-318874:187", "318874:256-318874:256", "318874:23-318874:23", 
    "318874:27-318874:27", "318874:35-318874:35", "318874:42-318874:43", "318874:54-318874:54", "318874:60-318874:60", 
    "318874:63-318874:63", "318874:70-318874:70", "318874:73-318874:73", "318874:75-318874:75", "318874:87-318874:87", 
    "318874:95-318874:95", "318874:129-318874:130", "318874:139-318874:139", "318874:142-318874:142", "318874:153-318874:154", 
    "318874:229-318874:229", "318874:240-318874:240", "318874:254-318874:254", "318874:29-318874:29", "318874:47-318874:47", 
    "318874:56-318874:56", "318874:61-318874:61", "318874:76-318874:76", "318874:80-318874:80", "318874:104-318874:104", 
    "318874:126-318874:127", "318874:133-318874:133", "318874:137-318874:137", "318874:140-318874:140", "318874:152-318874:152", 
    "318874:165-318874:165", "318874:238-318874:239", "318876:6-318876:6", "318876:3-318876:3", "318876:15-318876:15", 
    "318876:8-318876:9", "318876:14-318876:14", "318876:1-318876:2", "318876:4-318876:4", "318876:16-318876:16", 
    "318876:12-318876:12", "318876:5-318876:5", "318876:13-318876:13", "318876:7-318876:7", "318876:10-318876:11", 
    "318816:5-318816:5", "318816:13-318816:13", "318816:46-318816:46", "318816:57-318816:57", "318816:59-318816:59", 
    "318816:77-318816:77", "318816:104-318816:104", "318816:117-318816:118", "318816:147-318816:148", "318816:153-318816:153", 
    "318816:161-318816:161", "318816:169-318816:169", "318816:175-318816:175", "318816:181-318816:181", "318816:187-318816:187", 
    "318816:191-318816:191", "318816:202-318816:202", "318816:7-318816:7", "318816:16-318816:16", "318816:49-318816:50", 
    "318816:58-318816:58", "318816:62-318816:62", "318816:69-318816:71", "318816:88-318816:88", "318816:100-318816:100", 
    "318816:116-318816:116", "318816:120-318816:120", "318816:163-318816:164", "318816:188-318816:188", "318816:9-318816:9", 
    "318816:11-318816:11", "318816:52-318816:52", "318816:60-318816:60", "318816:82-318816:82", "318816:95-318816:95", 
    "318816:97-318816:97", "318816:102-318816:102", "318816:105-318816:105", "318816:149-318816:149", "318816:154-318816:154", 
    "318816:174-318816:174", "318816:184-318816:184", "318816:189-318816:189", "318816:204-318816:204", "318816:8-318816:8", 
    "318816:44-318816:44", "318816:53-318816:53", "318816:56-318816:56", "318816:61-318816:61", "318816:66-318816:66", 
    "318816:81-318816:81", "318816:84-318816:84", "318816:90-318816:91", "318816:93-318816:93", "318816:96-318816:96", 
    "318816:98-318816:98", "318816:151-318816:151", "318816:172-318816:173", "318816:182-318816:183", "318816:67-318816:67", 
    "318816:73-318816:73", "318816:76-318816:76", "318816:89-318816:89", "318816:92-318816:92", "318816:146-318816:146", 
    "318816:168-318816:168", "318816:12-318816:12", "318816:48-318816:48", "318816:51-318816:51", "318816:64-318816:64", 
    "318816:74-318816:74", "318816:83-318816:83", "318816:86-318816:86", "318816:103-318816:103", "318816:165-318816:165", 
    "318816:203-318816:203", "318816:205-318816:205", "318816:207-318816:207", "318816:10-318816:10", "318816:14-318816:15", 
    "318816:47-318816:47", "318816:55-318816:55", "318816:68-318816:68", "318816:75-318816:75", "318816:78-318816:78", 
    "318816:85-318816:85", "318816:87-318816:87", "318816:94-318816:94", "318816:101-318816:101", "318816:119-318816:119", 
    "318816:152-318816:152", "318816:155-318816:155", "318816:162-318816:162", "318816:166-318816:166", "318816:170-318816:170", 
    "318816:190-318816:190", "318816:6-318816:6", "318816:17-318816:18", "318816:43-318816:43", "318816:45-318816:45", 
    "318816:54-318816:54", "318816:63-318816:63", "318816:65-318816:65", "318816:72-318816:72", "318816:79-318816:80", 
    "318816:99-318816:99", "318816:150-318816:150", "318816:167-318816:167", "318816:171-318816:171", "318816:185-318816:185", 
    "318816:206-318816:206", "318816:114-318816:114", "318816:124-318816:124", "318816:133-318816:133", "318816:179-318816:179", 
    "318816:186-318816:186", "318816:194-318816:195", "318816:198-318816:198", "318816:200-318816:200", "318816:108-318816:108", 
    "318816:135-318816:135", "318816:145-318816:145", "318816:159-318816:159", "318816:208-318816:208", "318816:107-318816:107", 
    "318816:113-318816:113", "318816:122-318816:122", "318816:125-318816:125", "318816:128-318816:128", "318816:137-318816:138", 
    "318816:201-318816:201", "318816:109-318816:110", "318816:126-318816:126", "318816:131-318816:131", "318816:134-318816:134", 
    "318816:136-318816:136", "318816:156-318816:156", "318816:176-318816:177", "318816:199-318816:199", "318816:132-318816:132", 
    "318816:139-318816:139", "318816:142-318816:144", "318816:157-318816:157", "318816:180-318816:180", "318816:192-318816:192", 
    "318816:121-318816:121", "318816:127-318816:127", "318816:129-318816:129", "318816:210-318816:210", "318816:112-318816:112", 
    "318816:115-318816:115", "318816:130-318816:130", "318816:140-318816:140", "318816:158-318816:158", "318816:160-318816:160", 
    "318816:178-318816:178", "318816:193-318816:193", "318816:196-318816:196", "318816:106-318816:106", "318816:111-318816:111", 
    "318816:123-318816:123", "318816:141-318816:141", "318816:197-318816:197", "318816:209-318816:209", "318877:344-318877:344", 
    "318877:384-318877:385", "318877:447-318877:447", "318877:458-318877:458", "318877:465-318877:465", "318877:470-318877:471", 
    "318877:475-318877:475", "318877:482-318877:482", "318877:491-318877:491", "318877:499-318877:500", "318877:513-318877:513", 
    "318877:555-318877:555", "318877:558-318877:558", "318877:568-318877:568", "318877:573-318877:573", "318877:575-318877:575", 
    "318877:582-318877:582", "318877:592-318877:593", "318877:603-318877:603", "318877:606-318877:606", "318877:611-318877:611", 
    "318877:618-318877:618", "318877:339-318877:339", "318877:446-318877:446", "318877:456-318877:456", "318877:468-318877:468", 
    "318877:488-318877:488", "318877:511-318877:511", "318877:516-318877:516", "318877:518-318877:518", "318877:522-318877:522", 
    "318877:539-318877:539", "318877:541-318877:541", "318877:561-318877:561", "318877:566-318877:566", "318877:572-318877:572", 
    "318877:579-318877:579", "318877:588-318877:588", "318877:591-318877:591", "318877:599-318877:599", "318877:614-318877:614", 
    "318877:336-318877:336", "318877:340-318877:340", "318877:345-318877:345", "318877:430-318877:430", "318877:448-318877:448", 
    "318877:455-318877:455", "318877:461-318877:461", "318877:464-318877:464", "318877:483-318877:483", "318877:490-318877:490", 
    "318877:495-318877:495", "318877:498-318877:498", "318877:505-318877:505", "318877:533-318877:533", "318877:537-318877:537", 
    "318877:550-318877:550", "318877:552-318877:552", "318877:554-318877:554", "318877:557-318877:557", "318877:563-318877:563", 
    "318877:565-318877:565", "318877:569-318877:569", "318877:576-318877:576", "318877:585-318877:585", "318877:600-318877:600", 
    "318877:619-318877:620", "318877:383-318877:383", "318877:427-318877:427", "318877:450-318877:451", "318877:454-318877:454", 
    "318877:467-318877:467", "318877:476-318877:476", "318877:479-318877:479", "318877:489-318877:489", "318877:501-318877:501", 
    "318877:503-318877:503", "318877:508-318877:508", "318877:520-318877:520", "318877:525-318877:525", "318877:527-318877:527", 
    "318877:531-318877:531", "318877:540-318877:540", "318877:548-318877:548", "318877:559-318877:559", "318877:583-318877:583", 
    "318877:590-318877:590", "318877:594-318877:594", "318877:605-318877:605", "318877:608-318877:608", "318877:622-318877:623", 
    "318877:376-318877:378", "318877:429-318877:429", "318877:449-318877:449", "318877:452-318877:452", "318877:459-318877:459", 
    "318877:469-318877:469", "318877:485-318877:486", "318877:504-318877:504", "318877:506-318877:506", "318877:512-318877:512", 
    "318877:524-318877:524", "318877:534-318877:536", "318877:538-318877:538", "318877:542-318877:542", "318877:546-318877:547", 
    "318877:553-318877:553", "318877:560-318877:560", "318877:564-318877:564", "318877:570-318877:570", "318877:574-318877:574", 
    "318877:584-318877:584", "318877:586-318877:586", "318877:597-318877:597", "318877:602-318877:602", "318877:341-318877:341", 
    "318877:437-318877:437", "318877:440-318877:440", "318877:453-318877:453", "318877:457-318877:457", "318877:460-318877:460", 
    "318877:462-318877:462", "318877:474-318877:474", "318877:478-318877:478", "318877:480-318877:480", "318877:492-318877:492", 
    "318877:494-318877:494", "318877:496-318877:496", "318877:510-318877:510", "318877:514-318877:515", "318877:519-318877:519", 
    "318877:521-318877:521", "318877:528-318877:530", "318877:544-318877:544", "318877:567-318877:567", "318877:571-318877:571", 
    "318877:578-318877:578", "318877:581-318877:581", "318877:589-318877:589", "318877:595-318877:596", "318877:604-318877:604", 
    "318877:607-318877:607", "318877:609-318877:610", "318877:624-318877:624", "318877:337-318877:338", "318877:343-318877:343", 
    "318877:428-318877:428", "318877:436-318877:436", "318877:439-318877:439", "318877:466-318877:466", "318877:472-318877:473", 
    "318877:477-318877:477", "318877:484-318877:484", "318877:493-318877:493", "318877:497-318877:497", "318877:502-318877:502", 
    "318877:517-318877:517", "318877:526-318877:526", "318877:532-318877:532", "318877:549-318877:549", "318877:551-318877:551", 
    "318877:556-318877:556", "318877:562-318877:562", "318877:577-318877:577", "318877:598-318877:598", "318877:613-318877:613", 
    "318877:615-318877:617", "318877:625-318877:625", "318877:342-318877:342", "318877:379-318877:382", "318877:438-318877:438", 
    "318877:463-318877:463", "318877:481-318877:481", "318877:487-318877:487", "318877:507-318877:507", "318877:509-318877:509", 
    "318877:523-318877:523", "318877:543-318877:543", "318877:545-318877:545", "318877:580-318877:580", "318877:587-318877:587", 
    "318877:601-318877:601", "318877:612-318877:612", "318877:621-318877:621", "318885:2-318885:3", "318885:8-318885:8", 
    "318885:18-318885:19", "318885:24-318885:24", "318885:15-318885:15", "318885:9-318885:9", "318885:14-318885:14", 
    "318885:20-318885:20", "318885:23-318885:23", "318885:6-318885:6", "318885:12-318885:12", "318885:4-318885:5", 
    "318885:25-318885:26", "318885:13-318885:13", "318885:17-318885:17", "318885:22-318885:22", "318885:10-318885:10", 
    "318885:16-318885:16", "318885:1-318885:1", "318885:7-318885:7", "318885:11-318885:11", "318885:21-318885:21", 
    "318939:91-318939:91", "318939:90-318939:90", "318939:92-318939:92", "318939:89-318939:89", "318944:1-318944:2", 
    "319077:49-319077:49", "319077:51-319077:51", "319077:47-319077:48", "319077:50-319077:50", "318819:18-318819:18", 
    "318819:29-318819:29", "318819:3-318819:3", "318819:20-318819:20", "318819:4-318819:4", "318819:6-318819:6", 
    "318819:9-318819:9"
 ) )

# Production Info
process.configurationMetadata = cms.untracked.PSet(
    annotation = cms.untracked.string('-s nevts:1'),
    name = cms.untracked.string('Applications'),
    version = cms.untracked.string('$Revision: 1.19 $')
)

# Output definition

process.NANOAODoutput = cms.OutputModule("NanoAODOutputModule",
    compressionAlgorithm = cms.untracked.string('LZMA'),
    compressionLevel = cms.untracked.int32(9),
    dataset = cms.untracked.PSet(
        dataTier = cms.untracked.string('NANOAOD'),
        filterName = cms.untracked.string('')
    ),
    fileName = cms.untracked.string('file:test_nano_18_ElTau_Run2018B_rescue_2.root'),
    outputCommands = process.NANOAODEventContent.outputCommands
)

# Additional output definition

# Other statements
from Configuration.AlCa.GlobalTag import GlobalTag
process.GlobalTag = GlobalTag(process.GlobalTag, '106X_dataRun2_v37', '')

# Path and EndPath definitions
process.nanoAOD_step = cms.Path(process.particleLevelSequence + process.genParticleSequence + process.nanoSequenceCommon + process.nanoSequenceOnlyFullSim + process.muonMC + process.electronMC + process.photonMC + process.tauMC + process.globalTablesMC + process.btagWeightTable + process.genWeightsTable + process.genParticleTables)
process.endjob_step = cms.EndPath(process.endOfProcess)
process.NANOAODoutput_step = cms.EndPath(process.NANOAODoutput)

# Schedule definition
process.schedule = cms.Schedule(process.nanoAOD_step,process.endjob_step,process.NANOAODoutput_step)
from PhysicsTools.PatAlgos.tools.helpers import associatePatAlgosToolsTask
associatePatAlgosToolsTask(process)

# customisation of the process.

# Automatic addition of the customisation function from PhysicsTools.NanoAOD.nano_cff
from PhysicsTools.NanoAOD.nano_cff import nanoAOD_customizeData 

#call to customisation function nanoAOD_customizeData imported from PhysicsTools.NanoAOD.nano_cff
process = nanoAOD_customizeData(process)

# End of customisation functions

# Customisation from command line

process.unpackedPatTrigger.triggerResults = cms.InputTag("TriggerResults::SIMembeddingHLT")
process.NANOAODoutput.outputCommands.append("keep edmTriggerResults_*_*_SIMembeddingHLT")
process.NANOAODoutput.outputCommands.append("keep edmTriggerResults_*_*_MERGE")
process.NANOAODoutput.outputCommands.remove("keep edmTriggerResults_*_*_*")
process.genParticles2HepMC.genEventInfo = cms.InputTag("generator", "", "SIMembeddingpreHLT")
process.patJetsReapplyJECPuppi.jetSource = cms.InputTag("slimmedJetsPuppi", "", "MERGE")
process.patJetCorrFactorsReapplyJECPuppi.src = cms.InputTag("slimmedJetsPuppi", "", "MERGE")
process.puppiMetTable.src = cms.InputTag("slimmedMETsPuppi", "", "RERUNPUPPI")
process.rawPuppiMetTable.src = cms.InputTag("slimmedMETsPuppi", "", "RERUNPUPPI")
process.slimmedMETsPuppi.t01Variation = cms.InputTag("slimmedMETsPuppi", "", "RERUNPUPPI")
process.metrawCaloPuppi.metSource = cms.InputTag("slimmedMETsPuppi", "", "RERUNPUPPI")
process.pfMetPuppi.metSource = cms.InputTag("slimmedMETsPuppi", "", "RERUNPUPPI")

# add modifications from https://github.com/cms-sw/cmssw/pull/38472 to correctly handle trigger flags in NanoAOD
process.triggerObjectTable.selections[0].qualityBits = cms.string(
                            "filter('*CaloIdLTrackIdLIsoVL*TrackIso*Filter') + " \
                            "2*filter('hltEle*WPTight*TrackIsoFilter*') + " \
                            "4*filter('hltEle*WPLoose*TrackIsoFilter') + " \
                            "8*filter('*OverlapFilter*IsoEle*PFTau*') + " \
                            "16*filter('hltEle*Ele*CaloIdLTrackIdLIsoVL*Filter') + " \
                            "32*filter('hltMu*TrkIsoVVL*Ele*CaloIdLTrackIdLIsoVL*Filter*')  + " \
                            "64*filter('hlt*OverlapFilterIsoEle*PFTau*') + " \
                            "128*filter('hltEle*Ele*Ele*CaloIdLTrackIdLDphiLeg*Filter') + " \
                            "256*max(filter('hltL3fL1Mu*DoubleEG*Filtered*'),filter('hltMu*DiEle*CaloIdLTrackIdLElectronleg*Filter')) + " \
                            "512*max(filter('hltL3fL1DoubleMu*EG*Filter*'),filter('hltDiMu*Ele*CaloIdLTrackIdLElectronleg*Filter')) + " \
                            "1024*min(filter('hltEle32L1DoubleEGWPTightGsfTrackIsoFilter'),filter('hltEGL1SingleEGOrFilter')) + " \
                            "2048*filter('hltEle*CaloIdVTGsfTrkIdTGsfDphiFilter') + " \
                            "4096*path('HLT_Ele*PFJet*') + " \
                            "8192*max(filter('hltEG175HEFilter'),filter('hltEG200HEFilter'))")
process.triggerObjectTable.selections[2].qualityBits = cms.string(
                            "filter('*RelTrkIsoVVLFiltered0p4') + " \
                            "2*filter('hltL3crIso*Filtered0p07') + " \
                            "4*filter('*OverlapFilterIsoMu*PFTau*') + " \
                            "8*max(filter('hltL3crIsoL1*SingleMu*Filtered0p07'),filter('hltL3crIsoL1sMu*Filtered0p07')) + " \
                            "16*filter('hltDiMuon*Filtered*') + " \
                            "32*filter('hltMu*TrkIsoVVL*Ele*CaloIdLTrackIdLIsoVL*Filter*') + " \
                            "64*filter('hlt*OverlapFilterIsoMu*PFTau*') + " \
                            "128*filter('hltL3fL1TripleMu*') + " \
                            "256*max(filter('hltL3fL1DoubleMu*EG*Filtered*'),filter('hltDiMu*Ele*CaloIdLTrackIdLElectronleg*Filter')) + " \
                            "512*max(filter('hltL3fL1Mu*DoubleEG*Filtered*'),filter('hltMu*DiEle*CaloIdLTrackIdLElectronleg*Filter')) + " \
                            "1024*max(filter('hltL3fL1sMu*L3Filtered50*'),filter('hltL3fL1sMu*TkFiltered50*')) + " \
                            "2048*max(filter('hltL3fL1sMu*L3Filtered100*'),filter('hltL3fL1sMu*TkFiltered100*'))")
process.triggerObjectTable.selections[3] = cms.PSet(
            name = cms.string("Tau"),
            id = cms.int32(15),
            sel = cms.string("type(84) && pt > 5 && coll('*Tau*') && ( filter('*LooseChargedIso*') || filter('*MediumChargedIso*') || filter('*DeepTau*') || filter('*TightChargedIso*') || filter('*TightOOSCPhotons*') || filter('hltL2TauIsoFilter') || filter('*OverlapFilterIsoMu*') || filter('*OverlapFilterIsoEle*') || filter('*L1HLTMatched*') || filter('*Dz02*') || filter('*DoublePFTau*') || filter('*SinglePFTau*') || filter('hlt*SelectedPFTau') || filter('*DisplPFTau*') || filter('*Tau*') )"), #All trigger objects from a Tau collection + passing at least one filter
            # sel = cms.string("type(84) && pt > 5 && coll('*Tau*') && filter('*Tau*') "), #All trigger objects from a Tau collection + passing at least one filter
            l1seed = cms.string("type(-100)"),
            l1deltaR = cms.double(0.3),
            l2seed = cms.string("type(84) && coll('hltL2TauJetsL1IsoTauSeeded')"),
            l2deltaR = cms.double(0.3),
            skipObjectsNotPassingQualityBits = cms.bool(True),
            qualityBits = cms.string(
                            "filter('*LooseChargedIso*') + " \
                            "2*filter('*MediumChargedIso*') + " \
                            "4*filter('*TightChargedIso*') + " \
                            "8*filter('*DeepTau*') + " \
                            "16*filter('*TightOOSCPhotons*') + " \
                            "32*filter('*Hps*') + " \
                            "64*filter('hlt*DoublePFTau*TrackPt1*ChargedIsolation*Dz02*') + " \
                            "128*filter('hlt*DoublePFTau*DeepTau*L1HLTMatched') + " \
                            "256*filter('hlt*OverlapFilterIsoEle*WPTightGsf*PFTau') + " \
                            "512*filter('hlt*OverlapFilterIsoMu*PFTau*') + " \
                            "1024*filter('hlt*SelectedPFTau*L1HLTMatched') + " \
                            "2048*filter('hlt*DoublePFTau*TrackPt1*ChargedIso*') + " \
                            "4096*filter('hlt*DoublePFTau*Track*ChargedIso*AgainstMuon') + " \
                            "8192*filter('hltHpsSinglePFTau*HLTMatched') + " \
                            "16384*filter('hltHpsOverlapFilterDeepTauDoublePFTau*PFJet*') + " \
                            "32768*filter('hlt*Double*ChargedIsoDisplPFTau*Dxy*') + " \
                            "65536*filter('*Monitoring') + " \
                            "131072*filter('*Reg') + " \
                            "262144*filter('*L1Seeded') + " \
                            "524288*filter('*1Prong') + " \
                            "1048576*filter('*DoubleL2IsoTau26*') + " \
                            "2097152*filter('*SingleL2IsoTau20*') + " \
                            "4194304*filter('*TauJet*') "),
            # qualityBits = cms.string("5000*filter('*DoubleL2IsoTau26*')"),
            qualityBitsDoc = cms.string("1 = LooseChargedIso, 2 = MediumChargedIso, 4 = TightChargedIso, 8 = DeepTau, 16 = TightID OOSC photons, 32 = HPS, 64 = charged iso di-tau, 128 = deeptau di-tau, 256 = e-tau, 512 = mu-tau, 1024 = single-tau/tau+MET, 2048 = run 2 VBF+ditau, 4096 = run 3 VBF+ditau, 8192 = run 3 double PF jets + ditau, 16384 = di-tau + PFJet, 32768 = Displaced Tau, 65536 = Monitoring, 131072 = regional paths, 262144 = L1 seeded paths, 524288 = 1 prong tau paths, 1048576 = double L2 tau26 (for tau embedding), 2097152 = single L2 tau20 (for tauleg in mu + tau crosstrigger in embedding), 4194304 = tau jet5 (for tauleg in e + tau crosstrigger in embedding)"),
        )
process.triggerObjectTable.selections[4].qualityBits = cms.string(
                "1         * filter('*CrossCleaned*LooseChargedIsoPFTau*') + " \
                "2         * filter('hltBTagCaloCSVp087Triple') + " \
                "4         * filter('hltDoubleCentralJet90') + " \
                "8         * filter('hltDoublePFCentralJetLooseID90') + " \
                "16        * filter('hltL1sTripleJetVBFIorHTTIorDoubleJetCIorSingleJet') + " \
                "32        * filter('hltQuadCentralJet30') + " \
                "64        * filter('hltQuadPFCentralJetLooseID30') + " \
                "128       * max(filter('hltL1sQuadJetC50IorQuadJetC60IorHTT280IorHTT300IorHTT320IorTripleJet846848VBFIorTripleJet887256VBFIorTripleJet927664VBF'), filter('hltL1sQuadJetCIorTripleJetVBFIorHTT')) + " \
                "256       * filter('hltQuadCentralJet45') + " \
                "512       * filter('hltQuadPFCentralJetLooseID45') + " \
                "1024      * max(filter('hltL1sQuadJetC60IorHTT380IorHTT280QuadJetIorHTT300QuadJet'), filter('hltL1sQuadJetC50to60IorHTT280to500IorHTT250to340QuadJet')) + " \
                "2048      * max(filter('hltBTagCaloCSVp05Double'), filter('hltBTagCaloDeepCSVp17Double')) + " \
                "4096      * filter('hltPFCentralJetLooseIDQuad30') + " \
                "8192      * filter('hlt1PFCentralJetLooseID75') + " \
                "16384     * filter('hlt2PFCentralJetLooseID60') + " \
                "32768     * filter('hlt3PFCentralJetLooseID45') + " \
                "65536     * filter('hlt4PFCentralJetLooseID40') + " \
                "131072    * max(filter('hltBTagPFCSVp070Triple'), max(filter('hltBTagPFDeepCSVp24Triple'), filter('hltBTagPFDeepCSV4p5Triple')) )+ " \
                "262144    * filter('hltHpsOverlapFilterDeepTauDoublePFTau*PFJet*') + " \
                "524288   * filter('*CrossCleaned*MediumDeepTauDitauWPPFTau*') + " \
                "1048576   * filter('*CrossCleanedUsingDiJetCorrChecker*')"
                )
process.triggerObjectTable.selections[4].qualityBitsDoc = cms.string(
                "Jet bits: bit 0 for VBF cross-cleaned from loose iso PFTau, bit 1 for hltBTagCaloCSVp087Triple, bit 2 for hltDoubleCentralJet90, bit 3 for hltDoublePFCentralJetLooseID90," \
                " bit 4 for hltL1sTripleJetVBFIorHTTIorDoubleJetCIorSingleJet, bit 5 for hltQuadCentralJet30, bit 6 for hltQuadPFCentralJetLooseID30," \
                " bit 7 for hltL1sQuadJetC50IorQuadJetC60IorHTT280IorHTT300IorHTT320IorTripleJet846848VBFIorTripleJet887256VBFIorTripleJet927664VBF or hltL1sQuadJetCIorTripleJetVBFIorHTT," \
                " bit 8 for hltQuadCentralJet45, bit 9 for hltQuadPFCentralJetLooseID45," \
                " bit 10  for hltL1sQuadJetC60IorHTT380IorHTT280QuadJetIorHTT300QuadJet or hltL1sQuadJetC50to60IorHTT280to500IorHTT250to340QuadJet" \
                " bit 11 for hltBTagCaloCSVp05Double or hltBTagCaloDeepCSVp17Double, bit 12 for hltPFCentralJetLooseIDQuad30, bit 13 for hlt1PFCentralJetLooseID75," \
                " bit 14 for hlt2PFCentralJetLooseID60, bit 15 for hlt3PFCentralJetLooseID45, bit 16 for hlt4PFCentralJetLooseID40," \
                " bit 17 for hltBTagPFCSVp070Triple or hltBTagPFDeepCSVp24Triple or hltBTagPFDeepCSV4p5Triple,"\
                " bit 18 for Double tau + jet,"\
                " bit 19 for VBF cross-cleaned from medium deeptau PFTau,"+
                " bit 20 for VBF cross-cleaned using dijet correlation checker ")
process.triggerObjectTable.selections.append(
            cms.PSet(
            name = cms.string("BoostedTau"),
            id = cms.int32(1515),
            sel = cms.string("type(85) && pt > 120 && coll('hltAK8PFJetsCorrected') && filter('hltAK8SinglePFJets*SoftDropMass40*ParticleNetTauTau')"),
            l1seed = cms.string("type(-99)"),
            l1deltaR = cms.double(0.3),
            l2seed = cms.string("type(85)  && coll('hltAK8CaloJetsCorrectedIDPassed')"),
            l2deltaR = cms.double(0.3),
            skipObjectsNotPassingQualityBits = cms.bool(True),
            qualityBits = cms.string(
                "filter('hltAK8SinglePFJets*SoftDropMass40*ParticleNetTauTau')"
                ),
            qualityBitsDoc = cms.string("Bit 0 for HLT_AK8PFJetX_SoftDropMass40_PFAK8ParticleNetTauTau0p30")))

# Add early deletion of temporary data products to reduce peak memory need
from Configuration.StandardSequences.earlyDeleteSettings_cff import customiseEarlyDelete
process = customiseEarlyDelete(process)
# End adding early deletion
